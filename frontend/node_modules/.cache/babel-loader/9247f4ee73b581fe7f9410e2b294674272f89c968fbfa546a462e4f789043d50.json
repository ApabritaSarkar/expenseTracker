{"ast":null,"code":"var _jsxFileName = \"C:\\\\ExpenseTracker\\\\frontend\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement);\nconst categories = ['Food', 'Transport', 'Books', 'Entertainment', 'Others'];\nconst Charts = ({\n  refresh\n}) => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/expenses').then(res => res.json()).then(data => setExpenses(data)).catch(err => console.error('Error fetching expenses:', err));\n  }, []);\n  const categoryTotals = categories.map(cat => expenses.filter(e => e.category === cat).reduce((sum, e) => sum + e.amount, 0));\n  const monthlyTotals = new Array(12).fill(0);\n  expenses.forEach(e => {\n    const month = new Date(e.date).getMonth();\n    monthlyTotals[month] += e.amount;\n  });\n  const categoryData = {\n    labels: categories,\n    datasets: [{\n      data: categoryTotals,\n      backgroundColor: ['#4ade80', '#60a5fa', '#facc15', '#f87171', '#a78bfa'],\n      borderWidth: 1\n    }]\n  };\n  const monthlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    datasets: [{\n      label: 'Monthly Expenses ($)',\n      data: monthlyTotals,\n      backgroundColor: '#60a5fa'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-xl shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-md font-semibold mb-4 flex items-center gap-2\",\n        children: \"\\uD83E\\uDD67 Spending Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: categoryData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-xl shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-md font-semibold mb-4 flex items-center gap-2\",\n        children: \"\\uD83D\\uDCC8 Monthly Trend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: monthlyData,\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"XCaxB2DEspMpdgcH+IrrPBpyP4o=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","Doughnut","Bar","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","jsxDEV","_jsxDEV","register","categories","Charts","refresh","_s","expenses","setExpenses","fetch","then","res","json","data","catch","err","console","error","categoryTotals","map","cat","filter","e","category","reduce","sum","amount","monthlyTotals","Array","fill","forEach","month","Date","date","getMonth","categoryData","labels","datasets","backgroundColor","borderWidth","monthlyData","label","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/ExpenseTracker/frontend/src/components/Charts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Doughnut, Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement } from 'chart.js';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement);\r\n\r\nconst categories = ['Food', 'Transport', 'Books', 'Entertainment', 'Others'];\r\n\r\nconst Charts = ({ refresh }) => {\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/expenses')\r\n      .then((res) => res.json())\r\n      .then((data) => setExpenses(data))\r\n      .catch((err) => console.error('Error fetching expenses:', err));\r\n  }, []);\r\n\r\n  const categoryTotals = categories.map((cat) =>\r\n    expenses\r\n      .filter((e) => e.category === cat)\r\n      .reduce((sum, e) => sum + e.amount, 0)\r\n  );\r\n\r\n  const monthlyTotals = new Array(12).fill(0);\r\n  expenses.forEach((e) => {\r\n    const month = new Date(e.date).getMonth();\r\n    monthlyTotals[month] += e.amount;\r\n  });\r\n\r\n  const categoryData = {\r\n    labels: categories,\r\n    datasets: [\r\n      {\r\n        data: categoryTotals,\r\n        backgroundColor: ['#4ade80', '#60a5fa', '#facc15', '#f87171', '#a78bfa'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const monthlyData = {\r\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n    datasets: [\r\n      {\r\n        label: 'Monthly Expenses ($)',\r\n        data: monthlyTotals,\r\n        backgroundColor: '#60a5fa',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-10\">\r\n      <div className=\"bg-white p-6 rounded-xl shadow-md\">\r\n        <h3 className=\"text-md font-semibold mb-4 flex items-center gap-2\">\r\n          ðŸ¥§ Spending Categories\r\n        </h3>\r\n        <Doughnut data={categoryData} />\r\n      </div>\r\n\r\n      <div className=\"bg-white p-6 rounded-xl shadow-md\">\r\n        <h3 className=\"text-md font-semibold mb-4 flex items-center gap-2\">\r\n          ðŸ“ˆ Monthly Trend\r\n        </h3>\r\n        <Bar data={monthlyData} options={{ responsive: true, scales: { y: { beginAtZero: true } } }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}